{% extends 'base.html.twig' %}

{% block title %}Reservation | {{ parent() }} {% endblock %}
{% form_theme form.tickets 'bootstrap_4_layout.html.twig' %}
{% block body %}
    <main class="container">
        {{ form_start(form) }}
        <div class="card card--form text-center">
            <img src="{{ asset('build/images/ticket.jpg') }}" alt="" class="card-img-top hero-image">

            <div class="card-body">


                <!-- Type input-->
                <div>
                    <h5 class="card-title">Type de billet</h5>
                    {{ form_widget(form.typeTarif, {'attr': {'class': "form-radio-container"}}) }}
                </div>

                <hr>
                <!-- Date input - Nombre input-->
                <div class="form-group ">
                    <div>
                        <h5 class="card-title">Date de visite</h5>
                        {{ form_widget(form.dateVisite) }}
                    </div>

                    <div>
                        <h5 class="card-title">Nombre de billets</h5>
                        {{ form_widget(form.nbrTickets, {'attr': {'value': "1"}}) }}
                    </div>
                </div>

                <hr>
                <button id="add-form" class="btn btn-primary btn-block">Réserver</button>

            </div>

        </div>

        <div class="form-container d-none" id="form-steps-container" data-prototype="{{ form_widget(form.tickets.vars.prototype, {'attr': {'class': 'visitor__reservation'} })|e('html_attr') }}">

            <div class="steps-container">
                <a href="#" class="step"><span>1</span> Infos personnelles</a>
                <a href="#" class="step"><span>2</span> Détails de la commande</a>
                <a href="#" class="step"><span>3</span> Paiement</a>
                <a href="#" class="step"><span>4</span> Confirmation</a>
            </div>


            <!-- One "tab" for each step in the form: -->
            <div class="tab d-none">
                <h2>Infos personnelles</h2>


                <div id="add-container" class="py-2">
                    <a id="add-billet" class="btn btn-secondary add" href="#">Ajouter un autre billet</a>
                </div>
            </div>

            <div class="tab d-none">
                <h2>Détails de la commande</h2>
                <div class="form-group">

                </div>
            </div>

            <div class="tab d-none">
                <h2>Vos Paiement</h2>
            </div>

            <div class="tab d-none">
                <h2>Confirmation</h2>
            </div>


            {#bouttons étapes#}
            <div class="steps-container">
                <button type="button" id="prevBtn" data-trigger="-1" class="btn btn-light">Précedent</button>
                <button type="button" id="nextBtn" data-trigger="1" class="btn btn-primary">Suivant</button>
            </div>

        </div>
        {{ form_end(form) }}
    </main>


    {% block javascript %}
        {{ encore_entry_script_tags('form-steps') }}

        <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
        <script>
            window.location.hash = "no-back-button";
            window.location.hash = "Again-No-back-button";// cette ligne pour google chrome
            window.onhashchange = function(){
                window.location.hash="no-back-button";
            }
        </script>

        {#Formulaire dynamique ColletionType#}
        <script>
            let $collectionHolder;

            // setup an "add a form" button
            let $addFormButton = $('#add-form');

            jQuery(document).ready(function() {
                // Get the container that holds the collection of forms
                $collectionHolder = $('.form-container');

                // count the current form inputs we have (e.g. 2), use that as the new
                // index when inserting a new item (e.g. 2)
                $collectionHolder.data('index', $collectionHolder.find(':input').length);

                $addFormButton.on('click', function(e) {
                    e.preventDefault();
                    // Count le nombre de tickets selectionnés dans le 1er form
                    let nbrTickets = $('#reservation_form_nbrTickets').val();


//                    s'il existe un billet il va le supp pour mettre à jour le nouveau nombre de billets
                    if($('.visitor')[0]) {
                        $('.visitor')[0].remove();
                    }

                    $('.card--form').hide();
                    $('#form-steps-container').removeClass('d-none');

                    // add a new form
                    for(let i = 0; i < nbrTickets; i++) {

                        addCollectionForm($collectionHolder);

                    }
                    $('.remove')[0].remove(); // Remove btn "Supprimer ce billet" du 1er element

                    addNewVisitorForm($collectionHolder); // Add un nouveau billet visitor si btn 'ajouter un autre billet' existe

                });

            });


            function addCollectionForm($collectionHolder) {
                // Get the data-prototype explained earlier
                let prototype = $collectionHolder.data('prototype');

                // get the new index
                let index = $collectionHolder.data('index');
                let newForm = prototype;
                let visiteurTemplate = `<legend class="title-steps">Visiteur</legend>`;
                let removeFormA = `<div class="py-2"><a class="btn btn-danger remove" href="#">supprimer ce billet</a></div>`;

                // You need this only if you didn't set 'label' => false in your tags field in TicketType
                // Replace '__name__label__' in the prototype's HTML to
                // instead be a number based on how many items we have
                // newForm = newForm.replace(/__name__label__/g, index);

                // Replace '__name__' in the prototype's HTML to
                // instead be a number based on how many items we have
                newForm = newForm.replace(/__name__/g, index);

                // increase the index with one for the next item
                $collectionHolder.data('index', index + 1);

                let frag = document.createRange().createContextualFragment(`<fieldset class="visitor"> ${visiteurTemplate} ${newForm} ${removeFormA} </fieldset>`);

                // Display the form in the page in an visitor container, before the "Supprimer ce billet" link
                let newFormElement = $('.tab')[0].append(frag);

                // Ad new visitor form element
                $collectionHolder.append(newFormElement);
                $(".visitor").insertBefore($('#add-container'));


                collectionFormRemove();

            }

            function addNewVisitorForm($collectionHolder) {
                let addBillet = $('#add-billet');

                if(addBillet[0]) {
                    $(addBillet).on('click', function(e) {
                        e.preventDefault();

                        addCollectionForm($collectionHolder) // Ajout un nouveau billet visitor
                    })
                }
            }

//            Remove un billet visitor
            function collectionFormRemove() {
                let removeFormA = $('.remove');

                removeFormA.on('click', function(e) {
                    e.preventDefault();
                    // remove the visitor form
                    e.target.parentElement.parentElement.remove()

                });
            }

        </script>

    {% endblock %}
{% endblock %}
